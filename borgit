#! /usr/bin/env python3
"""Script for automation of borg backups, including testing the backups.
This wants to keep one local and remote copy.
It also wants to inform someone of any errors encountered."""
import subprocess


def run_backup(repo, repo_key, archive_name, sources):
    """Backup data using borg."""
    borg_env = {
        'BORG_REPO': repo,
        # This'll be accessible via /proc to root or anyone who can run as
        # this user... but that's true of the config file anyway.
        'BORG_PASSPHRASE': repo_key,
    }
    subprocess.check_call(
        [
            'borg', 'create',
            '--stats', '--verbose', '--show-rc',
            '--compression', 'lz4', '::' + archive_name,
        ] + sources,
        env=borg_env,
    )


# run_backup command:
# 0. Validate local and remote repositories, abort if one corrupt, but not if
# file check failed)
# 1. Do backup to local location
# 2. Validate local backup (abort if repository corrupt, but not if file check
# failed)
# 3. Do backup to remote location
# 4. Validate remote backup
# 5. (finally) Send report mail
#
# Also needed:
#  - e-mail_test command
#  - config_validate command
#  - validate_backup command
#
# For extracting files for testing, we have to remove the leading /, but
# otherwise it's just a local file path
#
# We'll need to import the config validation
